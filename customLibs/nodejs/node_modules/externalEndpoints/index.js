const https = require("https");
var statusCode = null;

postToExternalEndpoint = async (messageBody, endpoint, token) => {
  console.log("body: " + JSON.stringify(messageBody));

  console.log("set header");
  const options = {
    method: "POST",
    hostname: endpoint,
    path: "/",
    headers: {
      "Content-Type": "application/json",
      "Content-Length": JSON.stringify(messageBody).length,
      Authorization: "Bearer " + token,
    },
  };

  return new Promise((resolve, reject) => {
    const req = https.request(options, (res) => {
      statusCode = res.statusCode; // Atualiza o valor da variável statusCode com o status de resposta
      let responseData = "";

      res.on("data", (chunk) => {
        responseData += chunk;
      });
      console.log("Status code", statusCode);

      console.log("Response:", responseData);
      resolve({ statusCode, body: responseData });

      // resolve to return the status code and the response body
    });

    req.on("error", (error) => {
      console.error("Error sending POST request:", error);
      reject(error); // Rejeitamos a Promise em caso de erro na requisição
    });

    console.log("write");
    req.write(JSON.stringify(messageBody));

    console.log("end");
    req.end(() => {
      console.log("end loop");
    });
  });
};

module.exports = { postToExternalEndpoint };
